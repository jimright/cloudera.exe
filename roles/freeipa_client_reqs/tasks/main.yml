---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_version'] }}.yml"
    - "{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - "{{ ansible_facts['os_family'] }}-{{ ansible_facts['distribution_version'] }}.yml"
    - "{{ ansible_facts['os_family'] }}-{{ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ ansible_facts['os_family'] }}.yml"
    - "default.yml"
  
- name: Install - Ensure that IPA client packages are installed
  ansible.builtin.package:
    name: "{{ ipaclient_packages }}"
    state: present

- name: Disable SELinux
  ansible.posix.selinux:
    state: disabled
  notify: restart host

- name: Set up DNS and networking
  when: enable_dns
  block:
    - name: Update RHEL networking
      when: ansible_facts['os_family'] == 'RedHat'
      block:
        - name: Set cloud-init to preserve hostname (RHEL)
          ansible.builtin.lineinfile:
            path: /etc/cloud/cloud.cfg
            regex: "^(#)?preserve_hostname"
            line: "preserve_hostname: 1"
            state: present
          notify: restart host

        - name: Set /etc/NetworkManager/conf.d/disable-resolve.conf-managing.conf (RHEL)
          ansible.builtin.copy:
            dest: /etc/NetworkManager/conf.d/disable-resolve.conf-managing.conf
            content: |
              # Generated by Ansible
              [main]
              dns=none
          notify: restart host

        - name: Disable nm-cloud-setup if present
          ignore_errors: yes
          ansible.builtin.command: "{{ __nm_cloud_setup_disable_item }}"
          loop_control:
            loop_var: __nm_cloud_setup_disable_item
          loop:
            - systemctl disable nm-cloud-setup.service nm-cloud-setup.timer
            - systemctl stop nm-cloud-setup.service nm-cloud-setup.timer
            - ip rule del prio 30400
            - rm -rf /etc/systemd/system/nm-cloud-setup.service.d

        - name: Ensure NetworkManager is running to maintain DHCP
          ansible.builtin.service:
            name: NetworkManager
            state: restarted

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
